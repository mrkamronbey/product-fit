{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Documents/GitHub/product-fit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nvar EMPTY_KEYS = [];\nfunction filterKeys(keys, dataKeys) {\n  var filteredKeys = keys.filter(function (key) {\n    return dataKeys.has(key);\n  });\n  return keys.length === filteredKeys.length ? keys : filteredKeys;\n}\nexport default function useSelection(leftDataSource, rightDataSource) {\n  var selectedKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_KEYS;\n  // Prepare `dataSource` keys\n  var _React$useMemo = React.useMemo(function () {\n      return [new Set(leftDataSource.map(function (src) {\n        return src.key;\n      })), new Set(rightDataSource.map(function (src) {\n        return src.key;\n      }))];\n    }, [leftDataSource, rightDataSource]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    leftKeys = _React$useMemo2[0],\n    rightKeys = _React$useMemo2[1];\n  // Selected Keys\n  var _React$useState = React.useState(function () {\n      return filterKeys(selectedKeys, leftKeys);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    sourceSelectedKeys = _React$useState2[0],\n    setSourceSelectedKeys = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return filterKeys(selectedKeys, rightKeys);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    targetSelectedKeys = _React$useState4[0],\n    setTargetSelectedKeys = _React$useState4[1];\n  // Fill selected keys\n  React.useEffect(function () {\n    setSourceSelectedKeys(filterKeys(selectedKeys, leftKeys));\n    setTargetSelectedKeys(filterKeys(selectedKeys, rightKeys));\n  }, [selectedKeys]);\n  // Reset when data changed\n  React.useEffect(function () {\n    setSourceSelectedKeys(filterKeys(sourceSelectedKeys, leftKeys));\n    setTargetSelectedKeys(filterKeys(targetSelectedKeys, rightKeys));\n  }, [leftKeys, rightKeys]);\n  return [\n  // Keys\n  sourceSelectedKeys, targetSelectedKeys,\n  // Updater\n  setSourceSelectedKeys, setTargetSelectedKeys];\n}","map":{"version":3,"names":["React","EMPTY_KEYS","filterKeys","keys","dataKeys","filteredKeys","filter","key","has","length","useSelection","leftDataSource","rightDataSource","selectedKeys","arguments","undefined","useMemo","Set","map","src","leftKeys","rightKeys","useState","sourceSelectedKeys","setSourceSelectedKeys","targetSelectedKeys","setTargetSelectedKeys","useEffect"],"sources":["C:/Users/User/Documents/GitHub/product-fit/node_modules/antd/es/transfer/hooks/useSelection.js"],"sourcesContent":["import * as React from 'react';\nconst EMPTY_KEYS = [];\nfunction filterKeys(keys, dataKeys) {\n  const filteredKeys = keys.filter(key => dataKeys.has(key));\n  return keys.length === filteredKeys.length ? keys : filteredKeys;\n}\nexport default function useSelection(leftDataSource, rightDataSource) {\n  let selectedKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_KEYS;\n  // Prepare `dataSource` keys\n  const [leftKeys, rightKeys] = React.useMemo(() => [new Set(leftDataSource.map(src => src.key)), new Set(rightDataSource.map(src => src.key))], [leftDataSource, rightDataSource]);\n  // Selected Keys\n  const [sourceSelectedKeys, setSourceSelectedKeys] = React.useState(() => filterKeys(selectedKeys, leftKeys));\n  const [targetSelectedKeys, setTargetSelectedKeys] = React.useState(() => filterKeys(selectedKeys, rightKeys));\n  // Fill selected keys\n  React.useEffect(() => {\n    setSourceSelectedKeys(filterKeys(selectedKeys, leftKeys));\n    setTargetSelectedKeys(filterKeys(selectedKeys, rightKeys));\n  }, [selectedKeys]);\n  // Reset when data changed\n  React.useEffect(() => {\n    setSourceSelectedKeys(filterKeys(sourceSelectedKeys, leftKeys));\n    setTargetSelectedKeys(filterKeys(targetSelectedKeys, rightKeys));\n  }, [leftKeys, rightKeys]);\n  return [\n  // Keys\n  sourceSelectedKeys, targetSelectedKeys,\n  // Updater\n  setSourceSelectedKeys, setTargetSelectedKeys];\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,IAAMC,UAAU,GAAG,EAAE;AACrB,SAASC,UAAU,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAClC,IAAMC,YAAY,GAAGF,IAAI,CAACG,MAAM,CAAC,UAAAC,GAAG;IAAA,OAAIH,QAAQ,CAACI,GAAG,CAACD,GAAG,CAAC;EAAA,EAAC;EAC1D,OAAOJ,IAAI,CAACM,MAAM,KAAKJ,YAAY,CAACI,MAAM,GAAGN,IAAI,GAAGE,YAAY;AAClE;AACA,eAAe,SAASK,YAAY,CAACC,cAAc,EAAEC,eAAe,EAAE;EACpE,IAAIC,YAAY,GAAGC,SAAS,CAACL,MAAM,GAAG,CAAC,IAAIK,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGb,UAAU;EACjG;EACA,qBAA8BD,KAAK,CAACgB,OAAO,CAAC;MAAA,OAAM,CAAC,IAAIC,GAAG,CAACN,cAAc,CAACO,GAAG,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACZ,GAAG;MAAA,EAAC,CAAC,EAAE,IAAIU,GAAG,CAACL,eAAe,CAACM,GAAG,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACZ,GAAG;MAAA,EAAC,CAAC,CAAC;IAAA,GAAE,CAACI,cAAc,EAAEC,eAAe,CAAC,CAAC;IAAA;IAA1KQ,QAAQ;IAAEC,SAAS;EAC1B;EACA,sBAAoDrB,KAAK,CAACsB,QAAQ,CAAC;MAAA,OAAMpB,UAAU,CAACW,YAAY,EAAEO,QAAQ,CAAC;IAAA,EAAC;IAAA;IAArGG,kBAAkB;IAAEC,qBAAqB;EAChD,uBAAoDxB,KAAK,CAACsB,QAAQ,CAAC;MAAA,OAAMpB,UAAU,CAACW,YAAY,EAAEQ,SAAS,CAAC;IAAA,EAAC;IAAA;IAAtGI,kBAAkB;IAAEC,qBAAqB;EAChD;EACA1B,KAAK,CAAC2B,SAAS,CAAC,YAAM;IACpBH,qBAAqB,CAACtB,UAAU,CAACW,YAAY,EAAEO,QAAQ,CAAC,CAAC;IACzDM,qBAAqB,CAACxB,UAAU,CAACW,YAAY,EAAEQ,SAAS,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;EAClB;EACAb,KAAK,CAAC2B,SAAS,CAAC,YAAM;IACpBH,qBAAqB,CAACtB,UAAU,CAACqB,kBAAkB,EAAEH,QAAQ,CAAC,CAAC;IAC/DM,qBAAqB,CAACxB,UAAU,CAACuB,kBAAkB,EAAEJ,SAAS,CAAC,CAAC;EAClE,CAAC,EAAE,CAACD,QAAQ,EAAEC,SAAS,CAAC,CAAC;EACzB,OAAO;EACP;EACAE,kBAAkB,EAAEE,kBAAkB;EACtC;EACAD,qBAAqB,EAAEE,qBAAqB,CAAC;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}