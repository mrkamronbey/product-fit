{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Documents/GitHub/product-fit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/* eslint-disable import/prefer-default-export */\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  var _useInternalToken = useInternalToken(),\n    _useInternalToken2 = _slicedToArray(_useInternalToken, 3),\n    theme = _useInternalToken2[0],\n    token = _useInternalToken2[1],\n    hashId = _useInternalToken2[2];\n  return {\n    theme: theme,\n    token: token,\n    hashId: hashId\n  };\n}\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig: defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken: useToken,\n  defaultAlgorithm: defaultAlgorithm,\n  darkAlgorithm: darkAlgorithm,\n  compactAlgorithm: compactAlgorithm,\n  getDesignToken: getDesignToken\n};","map":{"version":3,"names":["getDesignToken","defaultConfig","useToken","useInternalToken","compactAlgorithm","darkAlgorithm","defaultAlgorithm","theme","token","hashId","defaultSeed"],"sources":["C:/Users/User/Documents/GitHub/product-fit/node_modules/antd/es/theme/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  const [theme, token, hashId] = useInternalToken();\n  return {\n    theme,\n    token,\n    hashId\n  };\n}\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken,\n  defaultAlgorithm,\n  darkAlgorithm,\n  compactAlgorithm,\n  getDesignToken\n};"],"mappings":";AAAA;AACA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,SAASC,aAAa,EAAEC,QAAQ,IAAIC,gBAAgB,QAAQ,YAAY;AACxE,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,SAASJ,QAAQ,GAAG;EAClB,wBAA+BC,gBAAgB,EAAE;IAAA;IAA1CI,KAAK;IAAEC,KAAK;IAAEC,MAAM;EAC3B,OAAO;IACLF,KAAK,EAALA,KAAK;IACLC,KAAK,EAALA,KAAK;IACLC,MAAM,EAANA;EACF,CAAC;AACH;AACA,eAAe;EACb;EACAR,aAAa,EAAbA,aAAa;EACb;EACAS,WAAW,EAAET,aAAa,CAACO,KAAK;EAChCN,QAAQ,EAARA,QAAQ;EACRI,gBAAgB,EAAhBA,gBAAgB;EAChBD,aAAa,EAAbA,aAAa;EACbD,gBAAgB,EAAhBA,gBAAgB;EAChBJ,cAAc,EAAdA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}