{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Documents/GitHub/product-fit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useMessage from '../message/useMessage';\nimport useModal from '../modal/useModal';\nimport useNotification from '../notification/useNotification';\nimport AppContext, { AppConfigContext } from './context';\nimport useStyle from './style';\nvar useApp = function useApp() {\n  return React.useContext(AppContext);\n};\nvar App = function App(props) {\n  var customizePrefixCls = props.prefixCls,\n    children = props.children,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    message = props.message,\n    notification = props.notification,\n    style = props.style;\n  var _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('app', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var customClassName = classNames(hashId, prefixCls, className, rootClassName);\n  var appConfig = useContext(AppConfigContext);\n  var mergedAppConfig = React.useMemo(function () {\n    return {\n      message: Object.assign(Object.assign({}, appConfig.message), message),\n      notification: Object.assign(Object.assign({}, appConfig.notification), notification)\n    };\n  }, [message, notification, appConfig.message, appConfig.message]);\n  var _useMessage = useMessage(mergedAppConfig.message),\n    _useMessage2 = _slicedToArray(_useMessage, 2),\n    messageApi = _useMessage2[0],\n    messageContextHolder = _useMessage2[1];\n  var _useNotification = useNotification(mergedAppConfig.notification),\n    _useNotification2 = _slicedToArray(_useNotification, 2),\n    notificationApi = _useNotification2[0],\n    notificationContextHolder = _useNotification2[1];\n  var _useModal = useModal(),\n    _useModal2 = _slicedToArray(_useModal, 2),\n    ModalApi = _useModal2[0],\n    ModalContextHolder = _useModal2[1];\n  var memoizedContextValue = React.useMemo(function () {\n    return {\n      message: messageApi,\n      notification: notificationApi,\n      modal: ModalApi\n    };\n  }, [messageApi, notificationApi, ModalApi]);\n  return wrapSSR( /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: memoizedContextValue\n  }, /*#__PURE__*/React.createElement(AppConfigContext.Provider, {\n    value: mergedAppConfig\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: customClassName,\n    style: style\n  }, ModalContextHolder, messageContextHolder, notificationContextHolder, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  App.displayName = 'App';\n}\nApp.useApp = useApp;\nexport default App;","map":{"version":3,"names":["classNames","React","useContext","ConfigContext","useMessage","useModal","useNotification","AppContext","AppConfigContext","useStyle","useApp","App","props","customizePrefixCls","prefixCls","children","className","rootClassName","message","notification","style","getPrefixCls","wrapSSR","hashId","customClassName","appConfig","mergedAppConfig","useMemo","Object","assign","messageApi","messageContextHolder","notificationApi","notificationContextHolder","ModalApi","ModalContextHolder","memoizedContextValue","modal","createElement","Provider","value","process","env","NODE_ENV","displayName"],"sources":["C:/Users/User/Documents/GitHub/product-fit/node_modules/antd/es/app/index.js"],"sourcesContent":["import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useMessage from '../message/useMessage';\nimport useModal from '../modal/useModal';\nimport useNotification from '../notification/useNotification';\nimport AppContext, { AppConfigContext } from './context';\nimport useStyle from './style';\nconst useApp = () => React.useContext(AppContext);\nconst App = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    children,\n    className,\n    rootClassName,\n    message,\n    notification,\n    style\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('app', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const customClassName = classNames(hashId, prefixCls, className, rootClassName);\n  const appConfig = useContext(AppConfigContext);\n  const mergedAppConfig = React.useMemo(() => ({\n    message: Object.assign(Object.assign({}, appConfig.message), message),\n    notification: Object.assign(Object.assign({}, appConfig.notification), notification)\n  }), [message, notification, appConfig.message, appConfig.message]);\n  const [messageApi, messageContextHolder] = useMessage(mergedAppConfig.message);\n  const [notificationApi, notificationContextHolder] = useNotification(mergedAppConfig.notification);\n  const [ModalApi, ModalContextHolder] = useModal();\n  const memoizedContextValue = React.useMemo(() => ({\n    message: messageApi,\n    notification: notificationApi,\n    modal: ModalApi\n  }), [messageApi, notificationApi, ModalApi]);\n  return wrapSSR( /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: memoizedContextValue\n  }, /*#__PURE__*/React.createElement(AppConfigContext.Provider, {\n    value: mergedAppConfig\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: customClassName,\n    style: style\n  }, ModalContextHolder, messageContextHolder, notificationContextHolder, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  App.displayName = 'App';\n}\nApp.useApp = useApp;\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}