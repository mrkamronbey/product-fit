{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Documents/GitHub/product-fit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nvar defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport var defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport var DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  var _React$useContext = React.useContext(DesignTokenContext),\n    rootDesignToken = _React$useContext.token,\n    hashed = _React$useContext.hashed,\n    theme = _React$useContext.theme,\n    components = _React$useContext.components;\n  var salt = \"\".concat(version, \"-\").concat(hashed || '');\n  var mergedTheme = theme || defaultTheme;\n  var _useCacheToken = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n      salt: salt,\n      override: Object.assign({\n        override: rootDesignToken\n      }, components),\n      formatToken: formatToken\n    }),\n    _useCacheToken2 = _slicedToArray(_useCacheToken, 2),\n    token = _useCacheToken2[0],\n    hashId = _useCacheToken2[1];\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"names":["createTheme","useCacheToken","useStyleRegister","React","version","PresetColors","defaultDerivative","defaultSeedToken","formatToken","genComponentStyleHook","statisticToken","merge","mergeToken","genPresetColor","defaultTheme","defaultConfig","token","hashed","DesignTokenContext","createContext","useToken","useContext","rootDesignToken","theme","components","salt","mergedTheme","override","Object","assign","hashId"],"sources":["C:/Users/User/Documents/GitHub/product-fit/node_modules/antd/es/theme/internal.js"],"sourcesContent":["import { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nconst defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport const defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport const DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAClF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,iBAAiB,MAAM,kBAAkB;AAChD,OAAOC,gBAAgB,MAAM,eAAe;AAC5C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,qBAAqB,MAAM,8BAA8B;AAChE,OAAOC,cAAc,IAAIC,KAAK,IAAIC,UAAU,QAAQ,kBAAkB;AACtE,OAAOC,cAAc,MAAM,uBAAuB;AAClD,IAAMC,YAAY,GAAGd,WAAW,CAACM,iBAAiB,CAAC;AACnD;AACA;AACAD,YAAY,EAAEK,cAAc,EAAEE,UAAU;AACxC;AACAV,gBAAgB,EAAEO,qBAAqB,EAAEI,cAAc;AACvD;AACA;AACA,OAAO,IAAME,aAAa,GAAG;EAC3BC,KAAK,EAAET,gBAAgB;EACvBU,MAAM,EAAE;AACV,CAAC;AACD,OAAO,IAAMC,kBAAkB,GAAG,aAAaf,KAAK,CAACgB,aAAa,CAACJ,aAAa,CAAC;AACjF;AACA,OAAO,SAASK,QAAQ,GAAG;EACzB,wBAKIjB,KAAK,CAACkB,UAAU,CAACH,kBAAkB,CAAC;IAJ/BI,eAAe,qBAAtBN,KAAK;IACLC,MAAM,qBAANA,MAAM;IACNM,KAAK,qBAALA,KAAK;IACLC,UAAU,qBAAVA,UAAU;EAEZ,IAAMC,IAAI,aAAMrB,OAAO,cAAIa,MAAM,IAAI,EAAE,CAAE;EACzC,IAAMS,WAAW,GAAGH,KAAK,IAAIT,YAAY;EACzC,qBAAwBb,aAAa,CAACyB,WAAW,EAAE,CAACnB,gBAAgB,EAAEe,eAAe,CAAC,EAAE;MACtFG,IAAI,EAAJA,IAAI;MACJE,QAAQ,EAAEC,MAAM,CAACC,MAAM,CAAC;QACtBF,QAAQ,EAAEL;MACZ,CAAC,EAAEE,UAAU,CAAC;MACdhB,WAAW,EAAXA;IACF,CAAC,CAAC;IAAA;IANKQ,KAAK;IAAEc,MAAM;EAOpB,OAAO,CAACJ,WAAW,EAAEV,KAAK,EAAEC,MAAM,GAAGa,MAAM,GAAG,EAAE,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}