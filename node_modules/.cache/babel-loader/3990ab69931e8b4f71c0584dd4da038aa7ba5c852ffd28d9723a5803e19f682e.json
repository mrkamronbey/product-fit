{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Documents/GitHub/product-fit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nimport ColorSteppers from './ColorSteppers';\nvar ColorRgbInput = function ColorRgbInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n    value = _ref.value,\n    onChange = _ref.onChange;\n  var colorRgbInputPrefixCls = \"\".concat(prefixCls, \"-rgb-input\");\n  var _useState = useState(generateColor(value || '#000')),\n    _useState2 = _slicedToArray(_useState, 2),\n    rgbValue = _useState2[0],\n    setRgbValue = _useState2[1];\n  // Update step value\n  useEffect(function () {\n    if (value) {\n      setRgbValue(value);\n    }\n  }, [value]);\n  var handleRgbChange = function handleRgbChange(step, type) {\n    var rgb = rgbValue.toRgb();\n    rgb[type] = step || 0;\n    var genColor = generateColor(rgb);\n    if (!value) {\n      setRgbValue(genColor);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorRgbInputPrefixCls\n  }, /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().r),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: function onChange(step) {\n      return handleRgbChange(Number(step), 'r');\n    }\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().g),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: function onChange(step) {\n      return handleRgbChange(Number(step), 'g');\n    }\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().b),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: function onChange(step) {\n      return handleRgbChange(Number(step), 'b');\n    }\n  }));\n};\nexport default ColorRgbInput;","map":{"version":3,"names":["React","useEffect","useState","generateColor","ColorSteppers","ColorRgbInput","_ref","prefixCls","value","onChange","colorRgbInputPrefixCls","rgbValue","setRgbValue","handleRgbChange","step","type","rgb","toRgb","genColor","createElement","className","max","min","Number","r","g","b"],"sources":["C:/Users/User/Documents/GitHub/product-fit/node_modules/antd/es/color-picker/components/ColorRgbInput.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nimport ColorSteppers from './ColorSteppers';\nconst ColorRgbInput = _ref => {\n  let {\n    prefixCls,\n    value,\n    onChange\n  } = _ref;\n  const colorRgbInputPrefixCls = `${prefixCls}-rgb-input`;\n  const [rgbValue, setRgbValue] = useState(generateColor(value || '#000'));\n  // Update step value\n  useEffect(() => {\n    if (value) {\n      setRgbValue(value);\n    }\n  }, [value]);\n  const handleRgbChange = (step, type) => {\n    const rgb = rgbValue.toRgb();\n    rgb[type] = step || 0;\n    const genColor = generateColor(rgb);\n    if (!value) {\n      setRgbValue(genColor);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorRgbInputPrefixCls\n  }, /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().r),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: step => handleRgbChange(Number(step), 'r')\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().g),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: step => handleRgbChange(Number(step), 'g')\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().b),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: step => handleRgbChange(Number(step), 'b')\n  }));\n};\nexport default ColorRgbInput;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,SAAS;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAGC,IAAI,EAAI;EAC5B,IACEC,SAAS,GAGPD,IAAI,CAHNC,SAAS;IACTC,KAAK,GAEHF,IAAI,CAFNE,KAAK;IACLC,QAAQ,GACNH,IAAI,CADNG,QAAQ;EAEV,IAAMC,sBAAsB,aAAMH,SAAS,eAAY;EACvD,gBAAgCL,QAAQ,CAACC,aAAa,CAACK,KAAK,IAAI,MAAM,CAAC,CAAC;IAAA;IAAjEG,QAAQ;IAAEC,WAAW;EAC5B;EACAX,SAAS,CAAC,YAAM;IACd,IAAIO,KAAK,EAAE;MACTI,WAAW,CAACJ,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,IAAMK,eAAe,GAAG,SAAlBA,eAAe,CAAIC,IAAI,EAAEC,IAAI,EAAK;IACtC,IAAMC,GAAG,GAAGL,QAAQ,CAACM,KAAK,EAAE;IAC5BD,GAAG,CAACD,IAAI,CAAC,GAAGD,IAAI,IAAI,CAAC;IACrB,IAAMI,QAAQ,GAAGf,aAAa,CAACa,GAAG,CAAC;IACnC,IAAI,CAACR,KAAK,EAAE;MACVI,WAAW,CAACM,QAAQ,CAAC;IACvB;IACAT,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACS,QAAQ,CAAC;EACxE,CAAC;EACD,OAAO,aAAalB,KAAK,CAACmB,aAAa,CAAC,KAAK,EAAE;IAC7CC,SAAS,EAAEV;EACb,CAAC,EAAE,aAAaV,KAAK,CAACmB,aAAa,CAACf,aAAa,EAAE;IACjDiB,GAAG,EAAE,GAAG;IACRC,GAAG,EAAE,CAAC;IACNd,KAAK,EAAEe,MAAM,CAACZ,QAAQ,CAACM,KAAK,EAAE,CAACO,CAAC,CAAC;IACjCjB,SAAS,EAAEA,SAAS;IACpBa,SAAS,EAAEV,sBAAsB;IACjCD,QAAQ,EAAE,kBAAAK,IAAI;MAAA,OAAID,eAAe,CAACU,MAAM,CAACT,IAAI,CAAC,EAAE,GAAG,CAAC;IAAA;EACtD,CAAC,CAAC,EAAE,aAAad,KAAK,CAACmB,aAAa,CAACf,aAAa,EAAE;IAClDiB,GAAG,EAAE,GAAG;IACRC,GAAG,EAAE,CAAC;IACNd,KAAK,EAAEe,MAAM,CAACZ,QAAQ,CAACM,KAAK,EAAE,CAACQ,CAAC,CAAC;IACjClB,SAAS,EAAEA,SAAS;IACpBa,SAAS,EAAEV,sBAAsB;IACjCD,QAAQ,EAAE,kBAAAK,IAAI;MAAA,OAAID,eAAe,CAACU,MAAM,CAACT,IAAI,CAAC,EAAE,GAAG,CAAC;IAAA;EACtD,CAAC,CAAC,EAAE,aAAad,KAAK,CAACmB,aAAa,CAACf,aAAa,EAAE;IAClDiB,GAAG,EAAE,GAAG;IACRC,GAAG,EAAE,CAAC;IACNd,KAAK,EAAEe,MAAM,CAACZ,QAAQ,CAACM,KAAK,EAAE,CAACS,CAAC,CAAC;IACjCnB,SAAS,EAAEA,SAAS;IACpBa,SAAS,EAAEV,sBAAsB;IACjCD,QAAQ,EAAE,kBAAAK,IAAI;MAAA,OAAID,eAAe,CAACU,MAAM,CAACT,IAAI,CAAC,EAAE,GAAG,CAAC;IAAA;EACtD,CAAC,CAAC,CAAC;AACL,CAAC;AACD,eAAeT,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}