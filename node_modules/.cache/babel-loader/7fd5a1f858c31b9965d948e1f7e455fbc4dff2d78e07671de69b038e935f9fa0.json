{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Documents/GitHub/product-fit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { render } from \"rc-util/es/React/render\";\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig, warnContext } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useNotification, { useInternalNotification } from './useNotification';\nvar notification = null;\nvar act = function act(callback) {\n  return callback();\n};\nvar taskQueue = [];\nvar defaultGlobalConfig = {};\nfunction getGlobalContext() {\n  var _defaultGlobalConfig = defaultGlobalConfig,\n    globalPrefixCls = _defaultGlobalConfig.prefixCls,\n    globalGetContainer = _defaultGlobalConfig.getContainer,\n    rtl = _defaultGlobalConfig.rtl,\n    maxCount = _defaultGlobalConfig.maxCount,\n    top = _defaultGlobalConfig.top,\n    bottom = _defaultGlobalConfig.bottom;\n  var mergedPrefixCls = globalPrefixCls !== null && globalPrefixCls !== void 0 ? globalPrefixCls : globalConfig().getPrefixCls('notification');\n  var mergedContainer = (globalGetContainer === null || globalGetContainer === void 0 ? void 0 : globalGetContainer()) || document.body;\n  return {\n    prefixCls: mergedPrefixCls,\n    container: mergedContainer,\n    rtl: rtl,\n    maxCount: maxCount,\n    top: top,\n    bottom: bottom\n  };\n}\nvar GlobalHolder = /*#__PURE__*/React.forwardRef(function (_, ref) {\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    prefixCls = _React$useState2[0],\n    setPrefixCls = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    container = _React$useState4[0],\n    setContainer = _React$useState4[1];\n  var _React$useState5 = React.useState(),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    maxCount = _React$useState6[0],\n    setMaxCount = _React$useState6[1];\n  var _React$useState7 = React.useState(),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    rtl = _React$useState8[0],\n    setRTL = _React$useState8[1];\n  var _React$useState9 = React.useState(),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    top = _React$useState10[0],\n    setTop = _React$useState10[1];\n  var _React$useState11 = React.useState(),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    bottom = _React$useState12[0],\n    setBottom = _React$useState12[1];\n  var _useInternalNotificat = useInternalNotification({\n      prefixCls: prefixCls,\n      getContainer: function getContainer() {\n        return container;\n      },\n      maxCount: maxCount,\n      rtl: rtl,\n      top: top,\n      bottom: bottom\n    }),\n    _useInternalNotificat2 = _slicedToArray(_useInternalNotificat, 2),\n    api = _useInternalNotificat2[0],\n    holder = _useInternalNotificat2[1];\n  var global = globalConfig();\n  var rootPrefixCls = global.getRootPrefixCls();\n  var rootIconPrefixCls = global.getIconPrefixCls();\n  var theme = global.getTheme();\n  var sync = function sync() {\n    var _getGlobalContext = getGlobalContext(),\n      nextGlobalPrefixCls = _getGlobalContext.prefixCls,\n      nextGlobalContainer = _getGlobalContext.container,\n      nextGlobalMaxCount = _getGlobalContext.maxCount,\n      nextGlobalRTL = _getGlobalContext.rtl,\n      nextTop = _getGlobalContext.top,\n      nextBottom = _getGlobalContext.bottom;\n    setPrefixCls(nextGlobalPrefixCls);\n    setContainer(nextGlobalContainer);\n    setMaxCount(nextGlobalMaxCount);\n    setRTL(nextGlobalRTL);\n    setTop(nextTop);\n    setBottom(nextBottom);\n  };\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, function () {\n    var instance = Object.assign({}, api);\n    Object.keys(instance).forEach(function (method) {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance: instance,\n      sync: sync\n    };\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls,\n    theme: theme\n  }, holder);\n});\nfunction flushNotice() {\n  if (!notification) {\n    var holderFragment = document.createDocumentFragment();\n    var newNotification = {\n      fragment: holderFragment\n    };\n    notification = newNotification;\n    // Delay render to avoid sync issue\n    act(function () {\n      render( /*#__PURE__*/React.createElement(GlobalHolder, {\n        ref: function ref(node) {\n          var _ref = node || {},\n            instance = _ref.instance,\n            sync = _ref.sync;\n          Promise.resolve().then(function () {\n            if (!newNotification.instance && instance) {\n              newNotification.instance = instance;\n              newNotification.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  }\n  // Notification not ready\n  if (!notification.instance) {\n    return;\n  }\n  // >>> Execute task\n  taskQueue.forEach(function (task) {\n    // eslint-disable-next-line default-case\n    switch (task.type) {\n      case 'open':\n        {\n          act(function () {\n            notification.instance.open(Object.assign(Object.assign({}, defaultGlobalConfig), task.config));\n          });\n          break;\n        }\n      case 'destroy':\n        act(function () {\n          notification === null || notification === void 0 ? void 0 : notification.instance.destroy(task.key);\n        });\n        break;\n    }\n  });\n  // Clean up\n  taskQueue = [];\n}\n// ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\nfunction setNotificationGlobalConfig(config) {\n  defaultGlobalConfig = Object.assign(Object.assign({}, defaultGlobalConfig), config);\n  // Trigger sync for it\n  act(function () {\n    var _a;\n    (_a = notification === null || notification === void 0 ? void 0 : notification.sync) === null || _a === void 0 ? void 0 : _a.call(notification);\n  });\n}\nfunction open(config) {\n  // Warning if exist theme\n  if (process.env.NODE_ENV !== 'production') {\n    warnContext('notification');\n  }\n  taskQueue.push({\n    type: 'open',\n    config: config\n  });\n  flushNotice();\n}\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key: key\n  });\n  flushNotice();\n}\nvar methods = ['success', 'info', 'warning', 'error'];\nvar baseStaticMethods = {\n  open: open,\n  destroy: destroy,\n  config: setNotificationGlobalConfig,\n  useNotification: useNotification,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nvar staticMethods = baseStaticMethods;\nmethods.forEach(function (type) {\n  staticMethods[type] = function (config) {\n    return open(Object.assign(Object.assign({}, config), {\n      type: type\n    }));\n  };\n});\n// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nvar noop = function noop() {};\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport var actWrapper = noop;\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = function actWrapper(wrapper) {\n    act = wrapper;\n  };\n}\nexport default staticMethods;","map":{"version":3,"names":["render","React","ConfigProvider","globalConfig","warnContext","PurePanel","useNotification","useInternalNotification","notification","act","callback","taskQueue","defaultGlobalConfig","getGlobalContext","globalPrefixCls","prefixCls","globalGetContainer","getContainer","rtl","maxCount","top","bottom","mergedPrefixCls","getPrefixCls","mergedContainer","document","body","container","GlobalHolder","forwardRef","_","ref","useState","setPrefixCls","setContainer","setMaxCount","setRTL","setTop","setBottom","api","holder","global","rootPrefixCls","getRootPrefixCls","rootIconPrefixCls","getIconPrefixCls","theme","getTheme","sync","nextGlobalPrefixCls","nextGlobalContainer","nextGlobalMaxCount","nextGlobalRTL","nextTop","nextBottom","useEffect","useImperativeHandle","instance","Object","assign","keys","forEach","method","apply","arguments","createElement","iconPrefixCls","flushNotice","holderFragment","createDocumentFragment","newNotification","fragment","node","Promise","resolve","then","task","type","open","config","destroy","key","setNotificationGlobalConfig","_a","call","process","env","NODE_ENV","push","methods","baseStaticMethods","_InternalPanelDoNotUseOrYouWillBeFired","staticMethods","noop","actWrapper","wrapper"],"sources":["C:/Users/User/Documents/GitHub/product-fit/node_modules/antd/es/notification/index.js"],"sourcesContent":["import { render } from \"rc-util/es/React/render\";\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig, warnContext } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useNotification, { useInternalNotification } from './useNotification';\nlet notification = null;\nlet act = callback => callback();\nlet taskQueue = [];\nlet defaultGlobalConfig = {};\nfunction getGlobalContext() {\n  const {\n    prefixCls: globalPrefixCls,\n    getContainer: globalGetContainer,\n    rtl,\n    maxCount,\n    top,\n    bottom\n  } = defaultGlobalConfig;\n  const mergedPrefixCls = globalPrefixCls !== null && globalPrefixCls !== void 0 ? globalPrefixCls : globalConfig().getPrefixCls('notification');\n  const mergedContainer = (globalGetContainer === null || globalGetContainer === void 0 ? void 0 : globalGetContainer()) || document.body;\n  return {\n    prefixCls: mergedPrefixCls,\n    container: mergedContainer,\n    rtl,\n    maxCount,\n    top,\n    bottom\n  };\n}\nconst GlobalHolder = /*#__PURE__*/React.forwardRef((_, ref) => {\n  const [prefixCls, setPrefixCls] = React.useState();\n  const [container, setContainer] = React.useState();\n  const [maxCount, setMaxCount] = React.useState();\n  const [rtl, setRTL] = React.useState();\n  const [top, setTop] = React.useState();\n  const [bottom, setBottom] = React.useState();\n  const [api, holder] = useInternalNotification({\n    prefixCls,\n    getContainer: () => container,\n    maxCount,\n    rtl,\n    top,\n    bottom\n  });\n  const global = globalConfig();\n  const rootPrefixCls = global.getRootPrefixCls();\n  const rootIconPrefixCls = global.getIconPrefixCls();\n  const theme = global.getTheme();\n  const sync = () => {\n    const {\n      prefixCls: nextGlobalPrefixCls,\n      container: nextGlobalContainer,\n      maxCount: nextGlobalMaxCount,\n      rtl: nextGlobalRTL,\n      top: nextTop,\n      bottom: nextBottom\n    } = getGlobalContext();\n    setPrefixCls(nextGlobalPrefixCls);\n    setContainer(nextGlobalContainer);\n    setMaxCount(nextGlobalMaxCount);\n    setRTL(nextGlobalRTL);\n    setTop(nextTop);\n    setBottom(nextBottom);\n  };\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, () => {\n    const instance = Object.assign({}, api);\n    Object.keys(instance).forEach(method => {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance,\n      sync\n    };\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls,\n    theme: theme\n  }, holder);\n});\nfunction flushNotice() {\n  if (!notification) {\n    const holderFragment = document.createDocumentFragment();\n    const newNotification = {\n      fragment: holderFragment\n    };\n    notification = newNotification;\n    // Delay render to avoid sync issue\n    act(() => {\n      render( /*#__PURE__*/React.createElement(GlobalHolder, {\n        ref: node => {\n          const {\n            instance,\n            sync\n          } = node || {};\n          Promise.resolve().then(() => {\n            if (!newNotification.instance && instance) {\n              newNotification.instance = instance;\n              newNotification.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  }\n  // Notification not ready\n  if (!notification.instance) {\n    return;\n  }\n  // >>> Execute task\n  taskQueue.forEach(task => {\n    // eslint-disable-next-line default-case\n    switch (task.type) {\n      case 'open':\n        {\n          act(() => {\n            notification.instance.open(Object.assign(Object.assign({}, defaultGlobalConfig), task.config));\n          });\n          break;\n        }\n      case 'destroy':\n        act(() => {\n          notification === null || notification === void 0 ? void 0 : notification.instance.destroy(task.key);\n        });\n        break;\n    }\n  });\n  // Clean up\n  taskQueue = [];\n}\n// ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\nfunction setNotificationGlobalConfig(config) {\n  defaultGlobalConfig = Object.assign(Object.assign({}, defaultGlobalConfig), config);\n  // Trigger sync for it\n  act(() => {\n    var _a;\n    (_a = notification === null || notification === void 0 ? void 0 : notification.sync) === null || _a === void 0 ? void 0 : _a.call(notification);\n  });\n}\nfunction open(config) {\n  // Warning if exist theme\n  if (process.env.NODE_ENV !== 'production') {\n    warnContext('notification');\n  }\n  taskQueue.push({\n    type: 'open',\n    config\n  });\n  flushNotice();\n}\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key\n  });\n  flushNotice();\n}\nconst methods = ['success', 'info', 'warning', 'error'];\nconst baseStaticMethods = {\n  open,\n  destroy,\n  config: setNotificationGlobalConfig,\n  useNotification,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nconst staticMethods = baseStaticMethods;\nmethods.forEach(type => {\n  staticMethods[type] = config => open(Object.assign(Object.assign({}, config), {\n    type\n  }));\n});\n// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nconst noop = () => {};\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport let actWrapper = noop;\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = wrapper => {\n    act = wrapper;\n  };\n}\nexport default staticMethods;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}