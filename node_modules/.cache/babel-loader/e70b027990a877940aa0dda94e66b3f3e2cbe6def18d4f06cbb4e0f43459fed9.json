{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Documents/GitHub/product-fit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nfunction hasValue(value) {\n  return value !== undefined;\n}\nvar useColorState = function useColorState(defaultStateValue, option) {\n  var defaultValue = option.defaultValue,\n    value = option.value;\n  var _useState = useState(function () {\n      var mergeState;\n      if (hasValue(value)) {\n        mergeState = value;\n      } else if (hasValue(defaultValue)) {\n        mergeState = defaultValue;\n      } else {\n        mergeState = defaultStateValue;\n      }\n      return generateColor(mergeState || '');\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    colorValue = _useState2[0],\n    setColorValue = _useState2[1];\n  useEffect(function () {\n    if (value) {\n      setColorValue(generateColor(value));\n    }\n  }, [value]);\n  return [colorValue, setColorValue];\n};\nexport default useColorState;","map":{"version":3,"names":["useEffect","useState","generateColor","hasValue","value","undefined","useColorState","defaultStateValue","option","defaultValue","mergeState","colorValue","setColorValue"],"sources":["C:/Users/User/Documents/GitHub/product-fit/node_modules/antd/es/color-picker/hooks/useColorState.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nfunction hasValue(value) {\n  return value !== undefined;\n}\nconst useColorState = (defaultStateValue, option) => {\n  const {\n    defaultValue,\n    value\n  } = option;\n  const [colorValue, setColorValue] = useState(() => {\n    let mergeState;\n    if (hasValue(value)) {\n      mergeState = value;\n    } else if (hasValue(defaultValue)) {\n      mergeState = defaultValue;\n    } else {\n      mergeState = defaultStateValue;\n    }\n    return generateColor(mergeState || '');\n  });\n  useEffect(() => {\n    if (value) {\n      setColorValue(generateColor(value));\n    }\n  }, [value]);\n  return [colorValue, setColorValue];\n};\nexport default useColorState;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,SAAS;AACvC,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB,OAAOA,KAAK,KAAKC,SAAS;AAC5B;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,iBAAiB,EAAEC,MAAM,EAAK;EACnD,IACEC,YAAY,GAEVD,MAAM,CAFRC,YAAY;IACZL,KAAK,GACHI,MAAM,CADRJ,KAAK;EAEP,gBAAoCH,QAAQ,CAAC,YAAM;MACjD,IAAIS,UAAU;MACd,IAAIP,QAAQ,CAACC,KAAK,CAAC,EAAE;QACnBM,UAAU,GAAGN,KAAK;MACpB,CAAC,MAAM,IAAID,QAAQ,CAACM,YAAY,CAAC,EAAE;QACjCC,UAAU,GAAGD,YAAY;MAC3B,CAAC,MAAM;QACLC,UAAU,GAAGH,iBAAiB;MAChC;MACA,OAAOL,aAAa,CAACQ,UAAU,IAAI,EAAE,CAAC;IACxC,CAAC,CAAC;IAAA;IAVKC,UAAU;IAAEC,aAAa;EAWhCZ,SAAS,CAAC,YAAM;IACd,IAAII,KAAK,EAAE;MACTQ,aAAa,CAACV,aAAa,CAACE,KAAK,CAAC,CAAC;IACrC;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,OAAO,CAACO,UAAU,EAAEC,aAAa,CAAC;AACpC,CAAC;AACD,eAAeN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}